{
    "extends": [
        "airbnb-base",
        "plugin:prettier/recommended",
        "plugin:@typescript-eslint/recommended"
    ],
    "env": {
        "jest": true
    },
    "settings": {
        "import/resolver": {
            "node": {
                "extensions": [".js", ".ts"]
            }
        },
        "import/extensions": [".js", ".ts"]
    },
    "rules": {
        "import/no-unresolved": "off",
        "indent": "off",
        "@typescript-eslint/indent": "off",
        "prettier/prettier": "error",
        // Replace Airbnb 'camelcase' rule with '@typescript-eslint' version
        // https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/camelcase.md
        "camelcase": "off",
        "@typescript-eslint/camelcase": ["error", { "properties": "never" }],

        "no-new": "off",
        "no-new-func": "off",
        "import/prefer-default-export": "off",

        // Replace Airbnb 'no-unused-vars' rule with '@typescript-eslint' version
        // https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/no-unused-vars.md
        "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars": [
            "error",
            {
                "vars": "all",
                "args": "after-used",
                "ignoreRestSiblings": false,
                "argsIgnorePattern": "^_"
            }
        ],

        // Append `ts` and `tsx` to Airbnb 'import/extensions' rule
        // Ensure consistent use of file extension within the import path
        // https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/extensions.md
        "import/extensions": [
            "error",
            "ignorePackages",
            {
                "js": "never",
                "mjs": "never",
                "jsx": "never",
                "ts": "never",
                "tsx": "never"
            }
        ],

        // Replace Airbnb 'semi' rule with '@typescript-eslint' version
        // https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/semi.md
        "semi": "off",
        "@typescript-eslint/semi": ["error", "always"],

        "no-useless-constructor": "off",
        "@typescript-eslint/no-useless-constructor": "error",
        "@typescript-eslint/no-parameter-properties": "off",
        "@typescript-eslint/explicit-member-accessibility": "off",
        "@typescript-eslint/no-non-null-assertion": "off"
    }
}
